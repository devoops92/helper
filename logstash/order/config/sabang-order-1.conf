input {
  jdbc {
    jdbc_driver_library => "/usr/share/java/mysql-connector-java-5.1.38.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://123.2.134.117:3306/sabang?useUnicode=true&characterEncoding=utf8"
    jdbc_pool_timeout => 3000
    jdbc_paging_enabled => true
    jdbc_page_size => 100000
    jdbc_user => "toface"
    jdbc_password =>"!dlatl00"
    schedule => "* * * * *"
    charset => "UTF-8"
    clean_run => false
    type => "order"
    tracking_column_type => "numeric"
    use_column_value => true
    tracking_column => "upd_ts"
    last_run_metadata_path => "/data/logstash/metadata/.order_1_last_run"
    statement => "SELECT
                        o.idx,
                        o.order_id,
                        o.compayny_id,
                        o.mall_id,
                        o.mall_user_id,
                        o.cust_id,
                        o.cust_nm,
                        o.cust_tel,
                        o.cust_cel,
                        o.cust_email,
                        o.rcv_tel,
                        o.rcv_cel,
                        o.rcv_email,
                        o.delv_msg,
                        o.mul_delv_msg,
                        o.rcv_nm,
                        o.rcv_zip,
                        o.rcv_addr,
                        o.total_cost,
                        o.ord_status,
                        o.auto_fg,
                        o.order_gubun,
                        o.ord_dt,
                        o.hope_delv_date,
                        o.hope_delv_type,
                        o.wms_date,
                        o.wms_nm,
                        o.ord_confirm_date,
                        o.dlvery_rcv_dt,
                        o.delivery_confirm_date,
                        o.cancel_rcv_dt,
                        o.cancel_dt,
                        o.rtn_rcv_dt,
                        o.rtn_dt,
                        o.reg_nm,
                        o.reg_dm,
                        o.ord_confirm_nm,
                        o.dlvery_rcv_nm,
                        o.delivery_confirm_nm,
                        o.cancel_rcv_nm,
                        o.cancel_nm,
                        o.rtn_rcv_nm,
                        o.rtn_nm,
                        o.chng_rcv_dt,
                        o.chng_dt,
                        o.chng_rcv_nm,
                        o.chng_nm,
                        o.ord_hold_date,
                        o.ord_hold_nm,
                        o.inv_send_dm,
                        o.inv_send_nm,
                        o.inv_send_err,
                        o.upd_dm as upd_dm,
                        cast(o.upd_ts as unsigned) as upd_ts,
                        o.upd_nm,
                        o.copy_idx,
                        o.stock_confirm_dm,
                        o.ord_scnd_id,
                        o.mall_order_seq,
                        o.jung_chk_yn,
                        o.jung_ip_price,
                        o.ord_set_yn,
                        o.ord_set_nm,
                        o.jung_chk_date,
                        p.partner_id,
                        p.dpartner_id,
                        p.ord_no,
                        p.mall_prod_id,
                        p.p_num,
                        p.prod_id,
                        p.sku_id,
                        p.p_product_name,
                        p.p_sku_value,
                        p.prod_nm,
                        p.product_keyword,
                        p.sale_cost,
                        p.pay_cost,
                        p.mall_won_cost,
                        p.won_cost,
                        p.ptotal_cost,
                        p.sku_value,
                        p.sale_cnt,
                        p.delivery_method,
                        p.delivery_method_str,
                        p.delv_cost,
                        p.install_dutch,
                        p.install_cost,
                        p.delivery_id,
                        p.invoice_no,
                        p.barcode_chk,
                        p.sku_cost,
                        p.delv_revi_cost,
                        p.etc_field11,
                        p.etc_field12,
                        p.barcode_good_chk,
                        p.barcode_good_err,
                        p.barcode_chk_date,
                        p.prd_cate_l,
                        p.prd_cate_m,
                        p.prd_cate_s,
                        p.prd_cate_d
    FROM
      rtl_order_1 o,
      rtl_order_prod_1 p
    WHERE
      o.idx=p.ord_idx
      and upd_ts > :sql_last_value
      and upd_ts < DATE_FORMAT(now(), '%Y%m%d%H%i%s')
    ORDER BY
      upd_ts ASC"
  }
}

filter {
    if [type] == "child" {
        mutate{
          add_field => {
              "[order_join][name]" => "order"
              "[order_join][parent]" => "%{p_num}"
          }
        }
    }

    ruby {
        code => "
            event.set('reg_dm', '19920515000000') if event.get('reg_dm').nil?
            event.set('reg_dm', '19920515000000') if event.get('reg_dm').to_s.empty?
            #logger.info('#reg_dm is:', 'value' => event.get('reg_dm'))

            event.set('cancel_rcv_dt', '19920515000000') if event.get('cancel_rcv_dt').nil?
            event.set('cancel_rcv_dt', '19920515000000') if event.get('cancel_rcv_dt').to_s.empty?
            #logger.info('#cancel_rcv_dt is:', 'value' => event.get('cancel_rcv_dt'))

            event.set('cancel_dt', '19920515000000') if event.get('cancel_dt').nil?
            event.set('cancel_dt', '19920515000000') if event.get('cancel_dt').to_s.empty?
            #logger.info('#cancel_dt is:', 'value' => event.get('cancel_dt'))

            event.set('rtn_rcv_dt', '19920515000000') if event.get('rtn_rcv_dt').nil?
            event.set('rtn_rcv_dt', '19920515000000') if event.get('rtn_rcv_dt').to_s.empty?
            #logger.info('#rtn_rcv_dt is:', 'value' => event.get('rtn_rcv_dt'))

            event.set('rtn_dt', '19920515000000') if event.get('rtn_dt').nil?
            event.set('rtn_dt', '19920515000000') if event.get('rtn_dt').to_s.empty?
            #logger.info('#rtn_dt is:', 'value' => event.get('rtn_dt'))

            event.set('delivery_confirm_date', '19920515000000') if event.get('delivery_confirm_date').nil?
            event.set('delivery_confirm_date', '19920515000000') if event.get('delivery_confirm_date').to_s.empty?
            #logger.info('#delivery_confirm_date is:', 'value' => event.get('delivery_confirm_date'))

            event.set('chng_dt', '19920515000000') if event.get('chng_dt').nil?
            event.set('chng_dt', '19920515000000') if event.get('chng_dt').to_s.empty?
            #logger.info('#chng_dt is:', 'value' => event.get('chng_dt'))

            event.set('dlvery_rcv_dt', '19920515000000') if event.get('dlvery_rcv_dt').nil?
            event.set('dlvery_rcv_dt', '19920515000000') if event.get('dlvery_rcv_dt').to_s.empty?
            #logger.info('#dlvery_rcv_dt is:', 'value' => event.get('dlvery_rcv_dt'))

            event.set('chng_rcv_dt', '19920515000000') if event.get('chng_rcv_dt').nil?
            event.set('chng_rcv_dt', '19920515000000') if event.get('chng_rcv_dt').to_s.empty?
            #logger.info('#chng_rcv_dt is:', 'value' => event.get('chng_rcv_dt'))

            event.set('stock_confirm_dm', '19920515000000') if event.get('stock_confirm_dm').nil?
            event.set('stock_confirm_dm', '19920515000000') if event.get('stock_confirm_dm').to_s.empty?
            #logger.info('#stock_confirm_dm is:', 'value' => event.get('stock_confirm_dm'))

            event.set('send_dm', '19920515000000') if event.get('send_dm').nil?
            event.set('send_dm', '19920515000000') if event.get('send_dm').to_s.empty?
            #logger.info('#send_dm is:', 'value' => event.get('send_dm'))
            "
    }

}

output {
    elasticsearch {
        hosts => ["http://123.2.134.118:9200","http://123.2.134.119:9200"]
        index => "sabang_prod_order_${SABANG_DB}"
        document_id => "order_1_%{idx}"
        routing => "%{p_num}"
    }
}
